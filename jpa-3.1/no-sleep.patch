diff --git a/persistence-tck/src/com/sun/ts/lib/harness/EETest.java b/persistence-tck/src/com/sun/ts/lib/harness/EETest.java
index 1ede1e8..7bd1f25 100644
--- a/persistence-tck/src/com/sun/ts/lib/harness/EETest.java
+++ b/persistence-tck/src/com/sun/ts/lib/harness/EETest.java
@@ -336,7 +336,7 @@ public abstract class EETest implements Serializable {
       TestUtil.initClient(props);
       retStatus = getPropsReady(argv, props);
       try {
-        Thread.sleep(iLogDelaySeconds);
+        //Thread.sleep(iLogDelaySeconds);
       } catch (InterruptedException e) {
         logErr("Exception: " + e);
       }
@@ -378,7 +378,7 @@ public abstract class EETest implements Serializable {
       TestUtil.separator2();
       sTestStatus = getPropsReady(argv, p);
       try {
-        Thread.sleep(iLogDelaySeconds);
+        //Thread.sleep(iLogDelaySeconds);
       } catch (InterruptedException e) {
         logErr("Exception: " + e);
       }
diff --git a/persistence-tck/src/com/sun/ts/lib/harness/ServiceEETest.java b/persistence-tck/src/com/sun/ts/lib/harness/ServiceEETest.java
index 1256dff..898c95b 100644
--- a/persistence-tck/src/com/sun/ts/lib/harness/ServiceEETest.java
+++ b/persistence-tck/src/com/sun/ts/lib/harness/ServiceEETest.java
@@ -208,7 +208,7 @@ public abstract class ServiceEETest extends EETest {
         TestUtil.initClient(props);
         s = getPropsReady(argv, props);
         try {
-          Thread.sleep(iLogDelaySeconds);
+          //Thread.sleep(iLogDelaySeconds);
           TestUtil.logTrace("SLEPT FOR:  " + iLogDelaySeconds);
         } catch (InterruptedException e) {
           logErr("Exception: " + e);
diff --git a/persistence-tck/src/com/sun/ts/lib/util/TestUtil.java b/persistence-tck/src/com/sun/ts/lib/util/TestUtil.java
index 9752c87..699e596 100644
--- a/persistence-tck/src/com/sun/ts/lib/util/TestUtil.java
+++ b/persistence-tck/src/com/sun/ts/lib/util/TestUtil.java
@@ -231,7 +231,7 @@ public final class TestUtil {
   public static void sleepSec(int s) {
     logTrace("Sleeping " + s + " seconds");
     try {
-      Thread.sleep(s * MILLI);
+      //Thread.sleep(s * MILLI);
     } catch (InterruptedException e) {
       logErr("Exception: " + e);
     }
@@ -256,7 +256,7 @@ public final class TestUtil {
   public static void sleepMsec(int s) {
     logTrace("Sleeping " + s + " milliseconds");
     try {
-      Thread.sleep(s);
+      //Thread.sleep(s);
     } catch (InterruptedException e) {
       logErr("Exception: " + e);
     }
@@ -582,7 +582,7 @@ public final class TestUtil {
         break;
       } catch (IOException e3) {
         try {
-          Thread.sleep(delaySeconds * 1000);
+          //Thread.sleep(delaySeconds * 1000);
         } catch (InterruptedException e4) {
         }
       }
diff --git a/persistence-tck/src/com/sun/ts/tests/jpa/core/annotations/version/Client.java b/persistence-tck/src/com/sun/ts/tests/jpa/core/annotations/version/Client.java
index e5568f0..ff4cfaf 100644
--- a/persistence-tck/src/com/sun/ts/tests/jpa/core/annotations/version/Client.java
+++ b/persistence-tck/src/com/sun/ts/tests/jpa/core/annotations/version/Client.java
@@ -723,7 +723,7 @@ public class Client extends PMClientBase {
         a.setName("two");
         // Sleep for 1 second
         try {
-          Thread.sleep(1 * 1000L);
+          //Thread.sleep(1 * 1000L);
         } catch (Exception ex) {
           ex.printStackTrace();
         }
@@ -781,7 +781,7 @@ public class Client extends PMClientBase {
         a.setName("two");
         // Sleep for 1 second
         try {
-          Thread.sleep(1 * 1000L);
+          //Thread.sleep(1 * 1000L);
         } catch (Exception ex) {
           ex.printStackTrace();
         }
